package org.example.helofy;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.image.Image;
import javafx.stage.Stage;
import org.example.helofy.utils.ImageLoader;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.control.ScrollPane;
import javafx.util.Duration;
public class HelofyMain extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/org/example/helofy/HelofyMain.fxml"));
        Parent root = loader.load();

        // Configurar ícono de la aplicación
        primaryStage.getIcons().add(ImageLoader.loadAppLogo());
        primaryStage.setTitle("Helofy Music Player");


        primaryStage.setResizable(false);
        Scene scene = new Scene(root);
        primaryStage.setScene(scene);
        applyScrollInertia(root);
        primaryStage.show();

    }

    private void applyScrollInertia(Parent root) {
        for (Node node : root.lookupAll(".scroll-pane")) {
            if (node instanceof ScrollPane scrollPane) {
                final Timeline[] timeline = new Timeline[1];
                final double[] velocity = {0};

                scrollPane.setOnScroll(event -> {
                    velocity[0] = -event.getDeltaY() / 300.0;

                    if (timeline[0] != null) timeline[0].stop();

                    timeline[0] = new Timeline(
                            new KeyFrame(Duration.millis(16), e -> {
                                if (Math.abs(velocity[0]) < 0.001) {
                                    timeline[0].stop();
                                } else {
                                    double newVal = scrollPane.getVvalue() + velocity[0];
                                    newVal = Math.max(0, Math.min(1, newVal));
                                    scrollPane.setVvalue(newVal);
                                    velocity[0] *= 0.90;
                                }
                            })
                    );
                    timeline[0].setCycleCount(Timeline.INDEFINITE);
                    timeline[0].play();
                });
            }
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}